#------------------------------------------------------------------#
# General input file format                                        #
#                                                                  #
# comments start with # till the end of the line                   #
# string constant are quoted by "..." or '...'                     #
# boolean can be (T F 1 0 on off) in or without ' or " quotes      #
# integers are integers                                            #
# real numbers are whatever (e.g. 1   1.0   1e-23   1.123d-54 )    #
# vector elements are separated by commas                          #
# spaces between tokens are not important                          #
# empty or comment lines are not important                         #
# order of lines is not important                                  #
#------------------------------------------------------------------#

dimension = 2

### Start options
file_gen = 'res.'
IC_restart_mode     = 0                     # 0 - normal, 1 - hard restart, 2 - soft restart, 3 - from IC
IC_filename         = 'ic/res.0050.com.res'
IC_restart_station  = 1                     # restart file number to use (NOT iteration!)
IC_file_fmt         = 0                     # IC data file format (0 - native restart file, 1 - netcdf, 2 - A.Wray in fourier space, 3 - simple binary)
Data_file_format    = F                     # T = formatted, F = unformatted
IC_adapt_grid       = T                     # If is set to .FALSE. no grid adaptation is done after the data are read.
do_Sequential_run   = F
wlog                = T                     # Write file 'results/res._log'
verb_level          = 1                     # Verbose level (bitwise flag): 1 - default, 31(11111) - most detailed
debug_level         = 0                     # Debug level (bitwise flag):   0 - default, 31(11111) - most detailed

### Wavelet thresholding filter
eps_init        = 5.0e-3                    # EPS used to adapt initial grid
eps_run         = 5.0e-3                    # EPS used in run
eps_adapt_steps = 1                         # How many time steps to adapt from eps_init to eps_run

### Wavelet levels
j_mn_init  = 2                              # J_mn = J_INIT while adapting to IC
j_lev_init = 2                              # starts adapting IC by having all the points on this level of resolution
j_IC       = 20                             # used if the IC data does not have dimensions in it then mxyz(:)*2^(j_IC-1) is used
J_FILT     = 20
J_MN       = 2
J_MX       = 9

### Computational domain
coord_min      = -5.0,    0.0,   -5.0       # XMIN, YMIN, ZMIN, etc
coord_max      =  25.0,   5.0,    0.0       # XMAX, YMAX, ZMAX, etc
coord_zone_min = -5e+02, -6e+02, -7e+02     # XMINzone, etc
coord_zone_max =  5e+02,  6e+02,  7e+02     # XMAXzone, etc

### Initial mesh
uniform  =  0,  0,  0                       # Type: 0 - uniform, 1 - non-uniform
M_vector = 12,  2,  2                       # Number of mesh points

### Wavelet orders
N_predict           = 2
N_predict_low_order = 1
N_update            = 0
N_update_low_order  = 0
N_diff              = 2

### Time integration
time_integration_method = 2                 # 1=krylov, 2=Crank Nicolson, 3=RK, 4=IMEX
RKtype                  = 4                 # 1=RK2, 2=RK2TVD, 3=RK3TVD, 4=RK4
IMEXtype                = 9                 # 1=(111)L, 2=(121)L, 3=(122)A(1.0), 4=(233)A(0.732), 5=(232)L, 6=(222)L,
                                            # 7=(343)L, 8=(443)L, 9=(122)A(1.0)TVD, 10=(232)A(0.5)TVD, 11=(332)LTVD
                                            # (srp) => s=# of implicit steps, r=# of explicit steps, p=order of IMEX method
                                            # A = A-stable method (R_inf follows in parentheses); L = L-stable method (R_inf = 0)
t_begin = 0
t_end   = 25
dt      = 2e-2
dtmax   = 1
dtmin   = 1e-7                              # If dt < dtmin then exection stops(likely blowing up)
dtwrite = 1e-1
t_adapt = 1e+2                              # When t > t_adapt use an adaptive time step if possible
                                            # NO time adaptation for RK and IMEX methods
cflmax = 0.5
cflmin = 0                                  # Exit if cfl < cflmin

### Scaling variables
Scale_Meth = 3                              # Method: 1 - Linf, 2 - pointwise L2, 3 - integral L2
scl_fltwt  = 0.0                            # Filter Weight: scl_new = scl_fltwt*scl_old + (1 - scl_fltwt)*scl_new
Zero_Mean  = F                              # Never used

### Adjacent zone
IJ_ADJ   = 1, 1, 1                          # IJ_ADJ(-1:1) = (coarser level), (same level), (finer level)
ADJ_type = 1, 1, 1                          # ADJ_type(-1:1) = (coarser level), (same level), (finer level) # (0 - less conservative, 1 - more conservative)

### Boundary conditions
periodic = 0, 0, 0                          # 0 - non-periodic, 1 - periodic
i_h      = 123456                           # order of boundaries: 1 - xmin, 2 - xmax, 3 - ymin, 4 - ymax, 5 - zmin, 6 - zmax
i_l      = 111111                           # algebraic/evolution (1/0) BC order: (lrbt)
BNDzone  = F                                # BNDzone
BCtype   = 0                                # BCtype: 0 - Dirichlet, 1 - Neuman, 2 - Mixed

### Linear solvers
GMRESflag            = T
BiCGSTABflag         = F
Jacoby_correction    = T
multigrid_correction = T
GMRES_correction     = T
kry_p                = 2
kry_perturb          = 2
kry_p_coarse         = 100
len_bicgstab         = 6
len_bicgstab_coarse  = 100
len_iter             = 5
W0    = 1.0                                 # W0 underrelaxation factor for inner V-cycle
W1    = 1.0                                 # W1 underrelaxation factor on the finest level
W2    = 0.6666666                           # W2 underrelaxation factor for weighted Jacoby (inner points)
W3    = 1.0                                 # W3 underrelaxation factor for weighted Jacoby (boundary points)
W_min = 1.0e-2                              # W_min correcton factor
W_max = 1.0                                 # W_max correction factor
tol_gmres_stop_if_larger = F                # If true stop iterating in gmres solver if error of last iteration was smaller
tol_gmres = 1.0e-4                          # tolerance for gmres iterative solver
tol1      = 1.0e-6                          # tolerance for non-solenoidal half-step
tol2      = 1.0e-6                          # tolerance for solenoidal half-step
tol3      = 1.0e-4                          # tolerance for adaptive time step

### Domain decomposition
domain_debug  = F
domain_split  = 1, 1, 1
domain_meth   = 3
domain_imbalance_tol = 0.1, 0.85, 0.95

### Case specific parameters

# thermophysical properties
Dconductivity_solid = 1.329e+00
Dconductivity_liquid = 1.898e+00
conductivity_jump = -4.374e-01
Dcapacity_solid = 5.671e-01
Dcapacity_liquid = 0
capacity_jump = 2.025e-01
fusion_delta = 3.663e-02                    # = liquidus - solidus
fusion_heat = 4.061e-01                     # latent heat of fusion

# setup parameters
laser_power = 7.278e+01
scanning_speed = 9.076e-01
powder_porosity = 0.4
powder_depth = 1.0
convective_transfer = 2.434e-05
radiative_transfer = 3.510e-04
absolute_temperature = 2.148e-01

# macroscopic model parameters
absorptivity = 0.3
emissivity = 0.3

# initial conditions
initial_temp = 1.8
initial_pool_radius = 1.8
initial_laser_position = 0, 0, 0            # starting point of the center of the laser beam

# numerics-specific parameters
smoothing_method = 1                        # 0 - piecewise C^0, 1 - hyperbolic tangent C^\infty
fusion_smoothing = 3                        # fusion_delta = fusion_delta*fusion_smoothing
powder_smoothing = 0.4                      # factor for smoothing the powder bed
eps_zero = 1e-12                            # approximation of zero
lfrac_scale = 10                            # scale factor for mesh adaptation
power_factor_2d = 0.3                       # laser power factor for the 2D problem
tol_newton = 1e-6                           # tolerance for root finding algorithm
max_iter_newton = 10                        # maximum number of iterations for root finding algorithm
check_resolution = T                        # if true, abort the program if the mesh resolution is insufficient
thickness_points = 8                        # minimum number of points inside the solid--liquid interface thickness
j_mx_porosity = 7                           # J_MX for porosity
cfl_fusion_factor = 2                       # the time step will be reduced this number of times
absorption_depth = 0.5
laser_as_bc = F                             # how the laser heat flux is implemented: T  - via BC, F -  via RHS.
